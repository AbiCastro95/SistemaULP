package Universidadejemplo.Vistas;

import Universidadejemplo.AccesoADatos.AlumnoData;
import Universidadejemplo.Entidades.Alumno;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.JOptionPane;

public class GestionAlumnos extends javax.swing.JInternalFrame {

    AlumnoData alumnoD;

    /**
     * Creates new form GestionAlumnos
     */
    public GestionAlumnos() {
        initComponents();
        this.alumnoD = new AlumnoData();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jLAlumno = new javax.swing.JLabel();
        jLDocumento = new javax.swing.JLabel();
        jTextFieldDni = new javax.swing.JTextField();
        jButtonBuscar = new javax.swing.JButton();
        jLApellido = new javax.swing.JLabel();
        jTextFieldApellido = new javax.swing.JTextField();
        jLNombre = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLEstado = new javax.swing.JLabel();
        jRadioButtonEstado = new javax.swing.JRadioButton();
        jLFechaNacimiento = new javax.swing.JLabel();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonGuardar = new javax.swing.JButton();
        jDateFechaNac = new com.toedter.calendar.JDateChooser();
        jButtonModificar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Gesti√≥n de Alumnos");
        setPreferredSize(new java.awt.Dimension(400, 450));
        setVisible(true);

        jSeparator1.setBackground(new java.awt.Color(153, 153, 153));

        jLAlumno.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLAlumno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLAlumno.setText("ALUMNO");
        jLAlumno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLDocumento.setText("Documento:");

        jTextFieldDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDniActionPerformed(evt);
            }
        });

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });

        jLApellido.setText("Apellido:");

        jTextFieldApellido.setEditable(false);
        jTextFieldApellido.setEnabled(false);
        jTextFieldApellido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldApellidoActionPerformed(evt);
            }
        });

        jLNombre.setText("Nombre:");

        jTextFieldNombre.setEditable(false);
        jTextFieldNombre.setEnabled(false);
        jTextFieldNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNombreActionPerformed(evt);
            }
        });

        jLEstado.setText("Estado:");

        jRadioButtonEstado.setEnabled(false);
        jRadioButtonEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEstadoActionPerformed(evt);
            }
        });

        jLFechaNacimiento.setText("Fecha de Nacimiento:");

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.setEnabled(false);
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });

        jDateFechaNac.setEnabled(false);

        jButtonModificar.setText("Modificar");
        jButtonModificar.setEnabled(false);
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLFechaNacimiento)
                        .addGap(37, 37, 37)
                        .addComponent(jDateFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLNombre)
                                                .addGap(46, 46, 46))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLEstado)
                                                .addGap(52, 52, 52)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jRadioButtonEstado)
                                            .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLApellido)
                                            .addComponent(jLDocumento))
                                        .addGap(26, 26, 26)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jTextFieldDni, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonBuscar))
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButtonLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonModificar)))
                        .addGap(32, 32, 32))))
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(jLAlumno)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLAlumno)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLDocumento)
                    .addComponent(jTextFieldDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonBuscar))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLApellido)
                    .addComponent(jTextFieldApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNombre)
                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jRadioButtonEstado)
                    .addComponent(jLEstado))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFechaNacimiento)
                    .addComponent(jDateFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButtonEliminar)
                    .addComponent(jButtonGuardar)
                    .addComponent(jButtonModificar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDniActionPerformed

    private void jTextFieldApellidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldApellidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldApellidoActionPerformed

    private void jTextFieldNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNombreActionPerformed

    private void jRadioButtonEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEstadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButtonEstadoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        try {
            int dni = Integer.parseInt(jTextFieldDni.getText());
            Alumno alumno = alumnoD.buscarAlumnoPorDni(dni);
            //Habilito los campos para la modificaci√≥n o  agregaci√≥n
            jTextFieldApellido.setEnabled(true);
            jTextFieldApellido.setEditable(true);
            jTextFieldNombre.setEnabled(true);
            jTextFieldNombre.setEditable(true);
            jDateFechaNac.setEnabled(true);
            jTextFieldDni.setEditable(false);
            if (alumno != null) {
                //Si encuentro un estudiante: relleno los campos con sus datos
                jTextFieldApellido.setText(alumno.getApellido());
                jTextFieldNombre.setText(alumno.getNombre());
                jDateFechaNac.setDate(Date.valueOf(alumno.getFechaNacimiento()));
                //Habilito el bot√≥n para modificar
                jButtonModificar.setEnabled(true);
                //Seg√∫n el estado del alumno
                if (alumno.getEstado()) {
                    //Si es 1 o true: Habilito para eliminar
                    jRadioButtonEstado.setEnabled(false);
                    jRadioButtonEstado.setSelected(alumno.getEstado());
                    jButtonEliminar.setEnabled(alumno.getEstado());
                } else {
                    jRadioButtonEstado.setEnabled(true);
                    jRadioButtonEstado.setSelected(alumno.getEstado());
                    jButtonEliminar.setEnabled(alumno.getEstado());
                }
            } else {
                jButtonGuardar.setEnabled(true);
                jRadioButtonEstado.setEnabled(true);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Formato de DNI inv√°lido.");
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
        //Funci√≥n para limpiar los campos y permitir la modificacion de los campos 
        jTextFieldDni.setText("");
        jTextFieldDni.setEditable(true);  
        jTextFieldApellido.setText("");
        jTextFieldApellido.setEnabled(false); 
        jTextFieldNombre.setText("");
        jTextFieldNombre.setEnabled(false);
        jRadioButtonEstado.setEnabled(false);
        jRadioButtonEstado.setSelected(false);
        jDateFechaNac.setEnabled(false);
        jDateFechaNac.setDate(null);
        
        jButtonEliminar.setEnabled(false);
        jButtonGuardar.setEnabled(false);
        jButtonModificar.setEnabled(false);
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
        
        try {
            int dni = Integer.valueOf(jTextFieldDni.getText());
            String apellido = jTextFieldApellido.getText();
            String nombre = jTextFieldNombre.getText();
            boolean estado = jRadioButtonEstado.isSelected();
            //Convertir la fecha a LocalDate
            java.util.Date date = jDateFechaNac.getDate();
            
            LocalDate fechaNacimiento = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            
            if (!verificarString(apellido) || !verificarString(nombre)){
                JOptionPane.showMessageDialog(null, "Nombre o Apellido invalido. ");
                return;
            }
            Alumno alumno = new Alumno(dni, apellido, nombre, fechaNacimiento, estado);
            System.out.println(alumno);
            alumnoD.guardarAlumno(alumno);

            jButtonLimpiarActionPerformed(evt);
            
        }catch(NullPointerException e) {
            JOptionPane.showMessageDialog(this, "Formato de fecha invalido. ");
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "DNI invalido. ");
        }
        
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int dni = Integer.parseInt(jTextFieldDni.getText());
        Alumno alumno = alumnoD.buscarAlumnoPorDni(dni);
        int id = alumno.getIdAlumno();
        alumnoD.eliminarAlumnoPorId(id);
        
        jButtonLimpiarActionPerformed(evt);
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed
        // TODO add your handling code here:
        try {
            int dni = Integer.valueOf(jTextFieldDni.getText());
            int id = ((Alumno) alumnoD.buscarAlumnoPorDni(dni)).getIdAlumno();
            String apellido = jTextFieldApellido.getText();
            String nombre = jTextFieldNombre.getText();
            boolean estado = jRadioButtonEstado.isSelected();
            //Convertir la fecha a LocalDate
            java.util.Date date = jDateFechaNac.getDate();
            LocalDate fechaNacimiento = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

            Alumno alumno = new Alumno(id, dni, apellido, nombre, fechaNacimiento, estado);
            alumnoD.modificarAlumno(alumno);

            jButtonLimpiarActionPerformed(evt);
        }catch(NullPointerException e) {
            JOptionPane.showMessageDialog(null, "Formato de fecha invalido. ");
        }catch(NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "DNI invalido. ");
        }
        
    }//GEN-LAST:event_jButtonModificarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JButton jButtonModificar;
    private com.toedter.calendar.JDateChooser jDateFechaNac;
    private javax.swing.JLabel jLAlumno;
    private javax.swing.JLabel jLApellido;
    private javax.swing.JLabel jLDocumento;
    private javax.swing.JLabel jLEstado;
    private javax.swing.JLabel jLFechaNacimiento;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JRadioButton jRadioButtonEstado;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextFieldApellido;
    private javax.swing.JTextField jTextFieldDni;
    private javax.swing.JTextField jTextFieldNombre;
    // End of variables declaration//GEN-END:variables

    
    private boolean verificarString(String texto){
        // Verifica que el string no este vacio
        if (texto.isEmpty()){
            return false;
        }
        // Verifica que el string no contenga numeros 
        for (int i = 0; i < texto.length(); i++) {
            char letra = texto.charAt(i);
            if ((letra < 65 || letra > 90) && (letra < 97 || letra > 122)){
                return false;
            }
        }
        
        return true;
    }
}
